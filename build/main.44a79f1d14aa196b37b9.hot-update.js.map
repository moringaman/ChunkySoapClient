{"version":3,"file":"main.44a79f1d14aa196b37b9.hot-update.js","sources":["webpack:///./src/components/ui/ProductSlider.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled, { css } from \"styled-components\";\nimport ProductItem from \"./ProductItem\";\nimport { SlideGrid } from \"../../styles/layout\";\n\nconst ProductSlider = ({ data, handleClick, perPage, ...rest }) => {\n  // TODO: Add dots with data array slice\n\n  const [sliceArray, setSliceArray] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const productsPerPage = perPage;\n\n  useEffect(() => {\n    if (data.length > 0) {\n      const slices = data.length / productsPerPage;\n      setSliceArray([...Array(slices)]);\n    }\n  }, [data]);\n\n  const selectPage = (e) => {\n    setCurrentPage(e.target.value);\n  };\n\n  return (\n    <>\n     { data &&\n      <SlideGrid {...rest} mb={'100px'}>\n        {data.length > 1 ? \n          data\n            .slice(\n              currentPage === 1 ? 0 : currentPage * productsPerPage,\n              productsPerPage\n            )\n            .map((product, i) => (\n              <ProductItem\n                product={product}\n                info=\"New\"\n                key={i}\n                clickEvent={handleClick}\n              />\n            )) : [data].map((product, i) => (\n\n              <ProductItem\n                product={product}\n                info=\"New\"\n                key={i}\n                clickEvent={handleClick}\n                />\n            ))}\n      </SlideGrid >\n}\n{ data && \n\n      <Dots>\n        {data.length > 3 &&\n          sliceArray.map((el, i) => (\n            <Dot\n              page={currentPage}\n              value={i + 1}\n              key={i}\n              onClick={(e) => selectPage(e)}\n            />\n          ))}\n      </Dots>\n}\n    </>\n  );\n};\n\nexport default ProductSlider;\n\nconst Dots = styled.div`\n  display: flex;\n  height: 50px;\n  width: 100%;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst Dot = styled.button`\n  border: none;\n  border-radius: 50%;\n  background-color: gray;\n  cursor: pointer;\n  width: 15px;\n  height: 15px;\n  margin: 8px;\n  ${(props) =>\n    props.page === props.value &&\n    css`\n      background-color: black;\n    `}\n`;\n\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAOA;AAGA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAYA;AACA;AACA;AAEA;AAOA;AAQA;AAAA;;;;A","sourceRoot":""}